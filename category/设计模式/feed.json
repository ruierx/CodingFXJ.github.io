{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodingFXJ'Blog • All posts by \"设计模式\" category",
    "description": "",
    "home_page_url": "https://CodingFXJ.github.io",
    "items": [
        {
            "id": "https://codingfxj.github.io/2021/06/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",
            "url": "https://codingfxj.github.io/2021/06/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",
            "title": "设计模式",
            "date_published": "2021-06-24T01:38:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><p>设计模式：为了解决某种特定问题给出的简洁而优化的解决方案。</p>\n<h4 id=\"常用设计模式\"><a class=\"markdownIt-Anchor\" href=\"#常用设计模式\">#</a> 常用设计模式</h4>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210704175521.png\"/>\n<h3 id=\"工厂模式\"><a class=\"markdownIt-Anchor\" href=\"#工厂模式\">#</a> 工厂模式</h3>\n<p>体现了高内聚、低耦合的思想：减少页面的中的冗余代码，提高代码的重复利用率</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    obj.name = name;</span><br><span class=\"line\">    obj.age = age;</span><br><span class=\"line\">    obj.writeJs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name + <span class=\"string\">&#x27;write js&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = createPerson(<span class=\"string\">&#x27;mengzhe&#x27;</span> , <span class=\"number\">26</span>);</span><br><span class=\"line\">p1.writeJs();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p2 = createPerson(<span class=\"string\">&#x27;iceman&#x27;</span> , <span class=\"number\">25</span>);</span><br><span class=\"line\">p2.writeJs();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"单例模式\"><a class=\"markdownIt-Anchor\" href=\"#单例模式\">#</a> 单例模式</h3>\n<p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。应用场景：线程池、全局缓存、浏览器中的 window 对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> singleTon = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Person.prototype.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Hello&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//产生闭包，instance会被缓存</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> instance = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">//全局变量接收的</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">singleTon</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!instance) instance = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p><strong>通用的单例模式</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> People = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.name = name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Singleton = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> instance</span><br><span class=\"line\">  Singleton = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (instance) <span class=\"keyword\">return</span> instance</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance = <span class=\"keyword\">new</span> Obj(<span class=\"built_in\">arguments</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> Singleton</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> peopleSingleton = Singleton(People)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> peopleSingleton(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"keyword\">new</span> peopleSingleton(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a===b)</span><br></pre></td></tr></table></figure>\n<p><strong>es6 实现单例模式</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">People</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">name</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> People.instance === <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> People.instance;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        People.instance = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> People(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"keyword\">new</span> People(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a===b)</span><br></pre></td></tr></table></figure>\n<h3 id=\"策略模式\"><a class=\"markdownIt-Anchor\" href=\"#策略模式\">#</a> 策略模式</h3>\n<p>一个问题多种匹配方案，留一个接口方便与增加减少方案，有效地避免多重条件选择语句</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> strategies = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;S&quot;</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> salary </span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> salary * <span class=\"number\">4</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;A&quot;</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> salary </span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> salary * <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;B&quot;</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> salary </span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> salary * <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> calculateBonus = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> level, salary </span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> strategies[ level ]( salary );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( calculateBonus( <span class=\"string\">&#x27;S&#x27;</span>, <span class=\"number\">20000</span> ) ); <span class=\"comment\">// 输出：80000</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( calculateBonus( <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">10000</span> ) ); <span class=\"comment\">// 输出：30000</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"代理模式\"><a class=\"markdownIt-Anchor\" href=\"#代理模式\">#</a> 代理模式</h3>\n<p>一个对象不能直接引用另一个对象，需要代理对象在中间起到中介作用</p>\n<p><strong>代购简单实现</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义一个鞋子类</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Shoes = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Shoes.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个代购对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> buyer = &#123;</span><br><span class=\"line\">    <span class=\"attr\">buyShoes</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">shoes</span>) </span>&#123;</span><br><span class=\"line\">        star.buyShoes(shoes.getName())</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">buyShoes</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;买到了一双&#x27;</span> + name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">buyer.buyShoes(<span class=\"keyword\">new</span> Shoes(<span class=\"string\">&#x27;高跟鞋&#x27;</span>)); <span class=\"comment\">// &quot;买到了一双高跟鞋&quot;</span></span><br></pre></td></tr></table></figure>\n<p><strong>缓存代理</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> multAdd = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, l = <span class=\"built_in\">arguments</span>.length; i &lt; l; i++) &#123;</span><br><span class=\"line\">        res = res + <span class=\"built_in\">arguments</span>[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> proxyAdd = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cache = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> args = <span class=\"built_in\">Array</span>.prototype.join.call(<span class=\"built_in\">arguments</span>, <span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(args <span class=\"keyword\">in</span> cache) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cache[args];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> caches[args] = multAdd.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">proxyAdd(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 6</span></span><br><span class=\"line\">proxyAdd(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "设计模式"
            ]
        }
    ]
}