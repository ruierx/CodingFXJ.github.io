{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodingFXJ'Blog • All posts by \"算法\" category",
    "description": "",
    "home_page_url": "https://CodingFXJ.github.io",
    "items": [
        {
            "id": "https://codingfxj.github.io/2021/07/16/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",
            "url": "https://codingfxj.github.io/2021/07/16/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",
            "title": "排序算法",
            "date_published": "2021-07-16T15:41:41.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><p>参考网站：<a href=\"https://visualgo.net/en\"><strong>排序动画图解</strong>   </a></p>\n<h3 id=\"一-选择排序\"><a class=\"markdownIt-Anchor\" href=\"#一-选择排序\">#</a> 一、选择排序</h3>\n<p><strong>随机生成测试数组</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> testArr = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">     testArr.push(<span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">100000</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr = [<span class=\"number\">3</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"keyword\">const</span> selectSort = <span class=\"function\">(<span class=\"params\">arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(arr)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(arr + <span class=\"string\">&quot;is not Array&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minIndex = i;</span><br><span class=\"line\">    <span class=\"comment\">//找到arr[i]后的最小值得索引</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[j] &lt; arr[minIndex]) &#123;</span><br><span class=\"line\">            minIndex = j</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//交换</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tem = arr[i]</span><br><span class=\"line\">    arr[i] = arr[minIndex]</span><br><span class=\"line\">    arr[minIndex] = tem</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> arr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二-快速排序\"><a class=\"markdownIt-Anchor\" href=\"#二-快速排序\">#</a> 二、快速排序</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> quickSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.length &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;　　</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pivotIndex = <span class=\"built_in\">Math</span>.floor(arr.length / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//选中心轴索引，并选取中心轴的值</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> pivot = arr.splice(pivotIndex, <span class=\"number\">1</span>)[<span class=\"number\">0</span>];　　</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = [];　　</span><br><span class=\"line\">    <span class=\"keyword\">var</span> right = [];　</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;　　　　</span><br><span class=\"line\">        <span class=\"comment\">//与中心轴比较，小的放在左数组，大的放在由数组　</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] &lt; pivot) &#123;　　　　　　</span><br><span class=\"line\">            left.push(arr[i]);　　　　</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;　　　　　　</span><br><span class=\"line\">            right.push(arr[i]);　　　　</span><br><span class=\"line\">        &#125;　</span><br><span class=\"line\">    <span class=\"comment\">// item &lt;= pivot ? left.push(item) : right.push(item)</span></span><br><span class=\"line\">    &#125;　　</span><br><span class=\"line\">    <span class=\"keyword\">return</span> quickSort(left).concat([pivot], quickSort(right));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三-插入排序\"><a class=\"markdownIt-Anchor\" href=\"#三-插入排序\">#</a> 三、插入排序</h3>\n<p>以第一个数为有序数组，让后面每一个数比较找位置并插入有序数组里。</p>\n<p>若后面待插入的数大于有序数组的最后一个数，就放在原位；</p>\n<p>若第小于有序数组的最后一个数，则进入 while 循环，在有序数组中找位置：</p>\n<p><code>arr[preIndex]</code>  后移索引变为 <code>preIndex+1</code> ， <code>current</code>  插入到 <code>arr[preIndex]</code>  前一位，也就是 <code>arr[preindex-1+1]</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertSort</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> preIndex, current;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        preIndex = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">        current = arr[i];</span><br><span class=\"line\">      <span class=\"comment\">//  while (preIndex &gt;= 0 &amp;&amp; current &lt; arr[preIndex]) &#123;//从大到小</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (preIndex &gt;= <span class=\"number\">0</span> &amp;&amp; current &lt; arr[preIndex]) &#123;<span class=\"comment\">//从小到大</span></span><br><span class=\"line\">            arr[preIndex + <span class=\"number\">1</span>] = arr[preIndex];<span class=\"comment\">//后移</span></span><br><span class=\"line\">            preIndex--;</span><br><span class=\"line\">        &#125;<span class=\"comment\">//退出while循环时，说明插入位置找到</span></span><br><span class=\"line\">        arr[preIndex + <span class=\"number\">1</span>] = current;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"四-希尔排序\"><a class=\"markdownIt-Anchor\" href=\"#四-希尔排序\">#</a> 四、希尔排序</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shellSort</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> gap = <span class=\"built_in\">Math</span>.floor(array.length / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span> &lt;= gap) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 把距离为 gap 的元素编为一个组，扫描所有组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = gap; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> temp = array[i];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 对距离为 gap 的元素组进行排序</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i - gap; j &gt;= <span class=\"number\">0</span> &amp;&amp; temp &lt; array[j]; j -= gap) &#123;</span><br><span class=\"line\">                array[j + gap] = array[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            array[j + gap] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        gap = <span class=\"built_in\">Math</span>.floor(gap / <span class=\"number\">2</span>); <span class=\"comment\">// 减小增量</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法"
            ]
        }
    ]
}