{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodingFXJ'Blog • All posts by \"vue\" tag",
    "description": "",
    "home_page_url": "https://CodingFXJ.github.io",
    "items": [
        {
            "id": "https://codingfxj.github.io/2021/07/23/%E5%BF%AB%E9%80%9F%E4%BA%86%E8%A7%A3Vue%E9%A1%B9%E7%9B%AE/",
            "url": "https://codingfxj.github.io/2021/07/23/%E5%BF%AB%E9%80%9F%E4%BA%86%E8%A7%A3Vue%E9%A1%B9%E7%9B%AE/",
            "title": "快速了解Vue项目",
            "date_published": "2021-07-23T13:16:58.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h3 id=\"写在最前\"><a class=\"markdownIt-Anchor\" href=\"#写在最前\">#</a> 写在最前</h3>\n<p>今天刚入职需要了解公司项目，刚开始感觉操作有点迷，浪费了不少时间，下面总结一下快速了解 Vue 项目的大致思路。</p>\n<h3 id=\"梳理项目结构流程\"><a class=\"markdownIt-Anchor\" href=\"#梳理项目结构流程\">#</a> 梳理项目结构流程</h3>\n<div class=\"note warning flat\"><p>package.json==&gt; 配置文件 ：了解 <code>scripts</code>  配置的命令和 <code>dependencies</code>  运行依赖</p>\n</div>\n<div class=\"note default flat\"><p>index.html ==&gt; 访问项目入口文件</p>\n</div>\n<div class=\"note primary flat\"><p>main.js ==&gt; 项目执行的入口文件：了解导入哪些插件</p>\n</div>\n<div class=\"note success flat\"><p>App.vue ==&gt;Vue 根组件</p>\n</div>\n<div class=\"note info flat\"><p>了解封装的请求接口及查看 vuex 文件</p>\n</div>\n<div class=\"note primary flat\"><p>了解路由导航守卫</p>\n</div>\n<div class=\"note warning flat\"><p>filter 文件夹了解用到的过滤</p>\n</div>\n<div class=\"note danger flat\"><p>router   <code>router.js</code> ==&gt; 路由地址配置文件：对照页面依次了解每个页面及引用的组件</p>\n</div>\t\n<h3 id=\"熟悉内部组件\"><a class=\"markdownIt-Anchor\" href=\"#熟悉内部组件\">#</a> 熟悉内部组件</h3>\n<div class=\"note warning flat\"><p>从 <code>routers</code>  配置中找到组件位置</p>\n</div>\n<div class=\"note default flat\"><p>了解组件内部 <code>import</code>  引入插件和 <code>components</code>  引入的子组件，观察 <code>data（）</code> 和 <code>methods（）</code> 使用了哪些数据、引用了哪些方法</p>\n</div>\n<div class=\"note primary flat\"><p>快速扫一遍 html 结构，结合浏览器的审查元素查找目标改动位置</p>\n</div>\n<div class=\"note success flat\"><p>查看钩子函数数据获取情况，及 vuex 的数据引用</p>\n</div>\n<div class=\"note info flat\"><p>注意 props 和父组件监听的子组件 $emit 的方法</p>\n</div>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/07/01/vue%E9%9D%A2%E8%AF%95%E9%A2%98/",
            "url": "https://codingfxj.github.io/2021/07/01/vue%E9%9D%A2%E8%AF%95%E9%A2%98/",
            "title": "vue面试题",
            "date_published": "2021-07-01T08:28:11.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h3 id=\"v-if-和v-for优先级\"><a class=\"markdownIt-Anchor\" href=\"#v-if-和v-for优先级\">#</a> v-if 和 v-for 优先级</h3>\n<blockquote>\n<p>v-for 优先级高于 v-if （从源码中可知）</p>\n</blockquote>\n<h3 id=\"vue组件data为什么是函数\"><a class=\"markdownIt-Anchor\" href=\"#vue组件data为什么是函数\">#</a> vue 组件 data 为什么是函数</h3>\n<blockquote>\n<p>vue 根组件是单例的，只有一个</p>\n<p>vue 其他组件可能有多个实例，为了保障各组件数据不互相干扰，</p>\n<p>如果是对象，这样多个组件会共享数据</p>\n</blockquote>\n<h3 id=\"computed和watch\"><a class=\"markdownIt-Anchor\" href=\"#computed和watch\">#</a> computed 和 watch</h3>\n<blockquote>\n<p>computed：依赖 vm 中 data 的属性变化而变化，函数必须用 return 返回。不要对 data 中的属性进行赋值操作，会形成死循环。</p>\n<p>模板页面需要处理复杂的逻辑运算时，可以处理同步数据，不能处理异步数据。</p>\n<p><strong>使用场景</strong>：当一个值受多个属性影响的时候 ------------ 购物车商品结算</p>\n</blockquote>\n<blockquote>\n<p>watch：函数是不需要调用的，函数名称必须要和 data 中的属性名一致。</p>\n<p>可以同步、异步处理数据，适用于监听数据与事件交互，当数据发生改变时触发多个事件。</p>\n<p><strong>使用场景</strong>：当一条数据的更改影响到多条数据的时候 --------- 搜索数据</p>\n</blockquote>\n<p><strong>区别：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、功能上：computed是计算属性，watch是监听一个值的变化，然后执行对应的回调。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span>、是否调用缓存：computed中的函数所依赖的属性没有发生变化，那么调用当前的函数的时候会从缓存中读取，而watch在每次监听的值发生变化的时候都会执行回调。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span>、是否调用<span class=\"keyword\">return</span>：computed中的函数必须要用<span class=\"keyword\">return</span>返回，watch中的函数不是必须要用<span class=\"keyword\">return</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span>、使用场景不同</span><br></pre></td></tr></table></figure>\n<h3 id=\"diff算法\"><a class=\"markdownIt-Anchor\" href=\"#diff算法\">#</a> DIFF 算法</h3>\n<p>将虚拟 dom 变化的地方高效的更新在真实 dom 上，时间复杂度 O (n)</p>\n<blockquote>\n<p>diff 执行过程是深度优先、同级比较的策略</p>\n</blockquote>\n<h3 id=\"vue设计原则理解\"><a class=\"markdownIt-Anchor\" href=\"#vue设计原则理解\">#</a> vue 设计原则理解</h3>\n<p>渐进式 js 框架（学习曲线是循序渐进的），核心库只关注视图层，易用、灵活、高效</p>\n<p>灵活性：可以按需引入自己所需的库</p>\n<p>高效性：超快的虚拟 dom 和 diff 算法</p>\n<p><strong>MVVM</strong></p>\n<p>dom 监听 model 数据，数据绑定到 view，实现数据双向绑定。</p>\n<p>实现了前后端数据的通信，低耦合</p>\n<h3 id=\"vue要求模板只能有一个根节点原因\"><a class=\"markdownIt-Anchor\" href=\"#vue要求模板只能有一个根节点原因\">#</a> Vue 要求模板只能有一个根节点原因</h3>\n<p><strong>从三方面考虑：</strong></p>\n<blockquote>\n<p>new Vue ({el:’#app’}) , 实例化 vue，需要开启一个入口</p>\n<p>树状数据结构，需要一个根作为遍历的起点。</p>\n<p>diff 算法要求</p>\n</blockquote>\n<h3 id=\"组件化\"><a class=\"markdownIt-Anchor\" href=\"#组件化\">#</a> 组件化</h3>\n<blockquote>\n<p>一个页面中所有的处理逻辑全部放在一起，那么处理起来会非常复杂混乱，不利于后续的管理以及扩展。</p>\n</blockquote>\n<blockquote>\n<p>把一些独立的功能单独抽取出来形成一些小的、独立的、可复用的模块，便于解耦、管理和维护，提升开发效率，测试性，复用性。</p>\n</blockquote>\n<p>组件分类：页面组件、业务组件、通用组件</p>\n<h3 id=\"前端性能优化\"><a class=\"markdownIt-Anchor\" href=\"#前端性能优化\">#</a> 前端性能优化</h3>\n<p>前端性能：从网站生成到代码开始运行消耗浏览器、服务器的资源统称为性能。</p>\n<blockquote>\n<p><strong>CSS 层</strong>：将 CSS 放在文件头部、降低 CSS 选择器的复杂性、使用 flexbox 布局，正确使用 display，不滥用 float，不过多声名 font-size，值为 0 时不需要单位，避免使用行内样式</p>\n<p><strong>JS 层</strong>：JavaScript 文件放在底部、使用事件委托、优先选择原生方法，避免频繁改变 DOM 元素样式，精炼 JS 代码，选择时间复杂度和空间复杂度较好的方案，使用节流</p>\n<p><strong>静态资源</strong>：使用字体图标 iconfont 代替图片图标、图片懒加载 ，响应式加载 ，图片压缩、尽可能利用 CSS3 效果代替图片</p>\n<p><strong>网络层</strong>： 使用防抖函数减少 HTTP 请求、使用 HTTP2、</p>\n<p><strong>服务器</strong>：启用 Gzip 压缩，静态资源使用 CDN 托管加速，减少 cookie 头信息大小</p>\n<p><strong>浏览器</strong>：善用缓存，不重复加载相同的资源、减少重绘重排</p>\n<p><strong>VUE 层</strong>：按需加载代码，提取第三库代码、</p>\n</blockquote>\n<h3 id=\"vue优化\"><a class=\"markdownIt-Anchor\" href=\"#vue优化\">#</a> Vue 优化</h3>\n<ol>\n<li>\n<p>路由懒加载</p>\n</li>\n<li>\n<p><code>keep-alive</code>  缓存页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;keep-alive&gt; <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span> &lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用 <code>v-show</code>  服用 DOM</p>\n</li>\n<li>\n<p><code>v-fo</code> r 遍历避免同时使用 <code>v-if</code> ，使用 <code>computed</code>  提前处理数据</p>\n</li>\n<li>\n<p>图片懒加载</p>\n</li>\n<li>\n<p>提取组件的 CSS 到单独到文件</p>\n</li>\n<li>\n<p>第三方插件按需导入（element-ui）</p>\n</li>\n<li>\n<p>利用 <code>Object.freeze()</code>  提升性能</p>\n</li>\n<li>\n<p>扁平化 Store 数据结构</p>\n</li>\n<li>\n<p>手动销毁 vue 本身组件以外的事件（比如定时器）</p>\n</li>\n<li>\n<p>无状态的组件标记为函数式组件 <code>&lt;template  functional&gt; &lt;/template&gt;</code></p>\n</li>\n<li>\n<p>子组件分割， <code>computed</code>  中需频繁访问的数据，可定义变量保存，避免 <code>this.</code>  调用</p>\n</li>\n</ol>\n<h3 id=\"vue30新特性\"><a class=\"markdownIt-Anchor\" href=\"#vue30新特性\">#</a> Vue3.0 新特性</h3>\n<p>更快：虚拟 DOM 重写、优化 slot 的生成</p>\n<p>更小：核心库体积更小</p>\n<h3 id=\"nexttick实现原理\"><a class=\"markdownIt-Anchor\" href=\"#nexttick实现原理\">#</a> nextTick 实现原理</h3>\n<p>它可以在 DOM 更新完毕之后执行一个回调</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&#125;) <span class=\"comment\">//涉及 MutationObserver、 事件的循环（Event Loop）、微任务(microtask)和宏任务(macrotask)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数据双向绑定响应式原理\"><a class=\"markdownIt-Anchor\" href=\"#数据双向绑定响应式原理\">#</a> 数据双向绑定（响应式原理）</h3>\n<blockquote>\n<p><strong>概念</strong>：数据变化更新视图、视图变化更新数据</p>\n</blockquote>\n<p><strong>设计思想</strong>：观察者模式</p>\n<p><strong>核心</strong>是 Object.defineProperty () 方法进行数据劫持</p>\n<p>vue3.0 版本用的是代理对象（new Proxy ()）来做响应式</p>\n<blockquote>\n<p><strong>实现步骤</strong>：</p>\n<p>1. 实现一个监听者 Oberver 来劫持并监听所有的属性，一旦有属性发生变化就通知订阅者</p>\n<p>2. 实现一个订阅者 watcher 来接受属性变化的通知并执行相应的方法，从而更新视图</p>\n<p>3. 实现一个解析器 compile，可以扫描和解析每个节点的相关指令，并根据初始化模板数据以及初始化相对应的订阅者</p>\n</blockquote>\n<h3 id=\"递归组件\"><a class=\"markdownIt-Anchor\" href=\"#递归组件\">#</a> 递归组件</h3>\n<p>概念：可以在它们自己的模板中调用自身的，一定要有一个结束的条件。</p>\n<p>应用：树状多级菜单</p>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/02/Vue%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/",
            "url": "https://codingfxj.github.io/2021/06/02/Vue%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA/",
            "title": "Vue脚手架搭建",
            "date_published": "2021-06-02T12:16:44.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"脚手架项目搭建\"><a class=\"markdownIt-Anchor\" href=\"#脚手架项目搭建\">#</a> 脚手架项目搭建</h2>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装： npm i @vue/cli -g</span><br><span class=\"line\">或者：  npm i <span class=\"string\">&quot;@vue/cli&quot;</span> -g</span><br><span class=\"line\">安装指定版本：npm install -g vue-cli@版本号 </span><br><span class=\"line\">        <span class=\"comment\">#npm install -g @vue/cli@版本号</span></span><br><span class=\"line\">卸载：</span><br><span class=\"line\">\tnpm uninstall -g @vue/cli</span><br></pre></td></tr></table></figure>\n<h4 id=\"版本查看\"><a class=\"markdownIt-Anchor\" href=\"#版本查看\">#</a> 版本查看</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node : node -v</span><br><span class=\"line\">npm : npm -v </span><br><span class=\"line\">vue/cli : vue -V <span class=\"comment\">#(注意是大V)</span></span><br><span class=\"line\">vue : npm list vue</span><br></pre></td></tr></table></figure>\n<p><img src=\"Vue%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA.assets/20210621104849.png\" alt=\"\"></p>\n<h4 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h4>\n<p><strong>vuecli2 创建项目</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建：  vue init webpack 项目名称</span><br><span class=\"line\">运行：  npm run dev</span><br><span class=\"line\">打包：  npm run build</span><br></pre></td></tr></table></figure>\n<p><strong>vuecli3 创建项目</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建：  vue create 项目名</span><br><span class=\"line\">运行：\t npm run serve</span><br><span class=\"line\">打包：  npm run build</span><br></pre></td></tr></table></figure>\n<h4 id=\"模板选择\"><a class=\"markdownIt-Anchor\" href=\"#模板选择\">#</a> 模板选择</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Project name vue-demo <span class=\"comment\"># 项目名称</span></span><br><span class=\"line\">Project description A Vue.js project <span class=\"comment\"># 项目描述</span></span><br><span class=\"line\">Author <span class=\"comment\"># 作者名称</span></span><br><span class=\"line\">Vue build   </span><br><span class=\"line\">\tRuntime + Compiler </span><br><span class=\"line\">\tRuntime Only </span><br><span class=\"line\">Install vue-router? Yes <span class=\"comment\"># 是否需要 vue-router</span></span><br><span class=\"line\">Use ESLint to lint your code? Yes <span class=\"comment\"># 是否使用 ESLint 作为代码规范.</span></span><br><span class=\"line\">Pick an ESLint preset Standard <span class=\"comment\"># ESlint </span></span><br><span class=\"line\">Set up unit tests Yes <span class=\"comment\"># 是否安装单元测试</span></span><br><span class=\"line\">Pick a <span class=\"built_in\">test</span> runner  <span class=\"comment\"># 测试模块</span></span><br><span class=\"line\">Setup e2e tests with Nightwatch?  <span class=\"comment\"># e2e 测试</span></span><br><span class=\"line\">Should we run `npm install` <span class=\"keyword\">for</span> you after the project has been created? (recommended) npm <span class=\"comment\"># 包管理器</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>runtime-compiler 与 runtime-only 区别:</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> runtime-compiler <span class=\"comment\">//代码中可以有template标签</span></span><br><span class=\"line\"> template --&gt;  ast --&gt; render --&gt; vdom --&gt; UI</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//运行的时候代码不能包含任意一个template标签</span></span><br><span class=\"line\">runtime-only (<span class=\"number\">1.</span>性能更高、<span class=\"number\">2.</span>代码更少、<span class=\"number\">3.</span>直接将template转成ast这一步省略了)</span><br><span class=\"line\"> render --&gt; vdom --&gt; UI</span><br></pre></td></tr></table></figure>\n<h4 id=\"项目结构\"><a class=\"markdownIt-Anchor\" href=\"#项目结构\">#</a> 项目结构</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. README.md    </span><br><span class=\"line\">2.  package.json:   (1)有scripts脚本  npm run serve   (2)项目所需的依赖</span><br><span class=\"line\">3. package-lock.json:   锁定依赖的版本</span><br><span class=\"line\">4. babel.config.js 了解，是babel在转换es6+代码时的配置</span><br><span class=\"line\">5. .gitignore: git的忽略文件，指定的文件和目录不会提交到git仓库</span><br><span class=\"line\">6. node_modules: nodejs的包文件</span><br><span class=\"line\">7. public</span><br><span class=\"line\">         (1)favicon.ico : 网站缩略图</span><br><span class=\"line\">         (2)index.html:  项目中唯一的一个网页，内部有一个#app的div</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/02/Vue%E7%BB%84%E4%BB%B6/",
            "url": "https://codingfxj.github.io/2021/06/02/Vue%E7%BB%84%E4%BB%B6/",
            "title": "Vue组件",
            "date_published": "2021-06-02T04:39:46.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vue组件\"><a class=\"markdownIt-Anchor\" href=\"#vue组件\">#</a> Vue 组件</h2>\n<h3 id=\"组件创建一\"><a class=\"markdownIt-Anchor\" href=\"#组件创建一\">#</a> 组件创建 (一)</h3>\n<blockquote>\n<p>组件创建的 3 个步骤：创建组件构造器、注册组件和使用组件。</p>\n</blockquote>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620184005.png\"/>\n<h4 id=\"全局组件\"><a class=\"markdownIt-Anchor\" href=\"#全局组件\">#</a> 全局组件</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.创建一个组件构造器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cpn = Vue.extend(&#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;&lt;div&gt;This is my first component!&lt;/div&gt;&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 2.注册组件，并指定组件的标签名</span></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;cpn&#x27;</span>, myComponent)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 3. 在挂载元素范围内使用组件--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">cpn</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"局部组件\"><a class=\"markdownIt-Anchor\" href=\"#局部组件\">#</a> 局部组件</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;cpn&#x27;</span>: cpn</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"组件创建二-语法糖\"><a class=\"markdownIt-Anchor\" href=\"#组件创建二-语法糖\">#</a> 组件创建 (二) 语法糖</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局 语法糖形式 </span></span><br><span class=\"line\">Vue.component(<span class=\"string\">&#x27;cpn1&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">`&lt;h2&gt;1111111111111111111&lt;/h2&gt;`</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//局部 语法糖形式 </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> cpn = &#123;</span><br><span class=\"line\">            <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#cpn&#x27;</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">                 cpn</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"组件创建三-抽离模板\"><a class=\"markdownIt-Anchor\" href=\"#组件创建三-抽离模板\">#</a> 组件创建 (三) 抽离模板</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 方式一 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cpn1&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">   ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 方式二 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/x-tempalte&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cpn2&quot;</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">   ...</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\"></span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"组件数据data\"><a class=\"markdownIt-Anchor\" href=\"#组件数据data\">#</a> 组件数据 data（）</h3>\n<blockquote>\n<p><strong>Vue 顶级组件</strong>  <code>app</code>  ，通常只会创建一个实例，所以 data 属性为一个对象</p>\n</blockquote>\n<blockquote>\n<p><strong>子组件</strong>  可能频繁创建实例，data 必须为函数。</p>\n<p>每一个组件实例都有属于自己的状态，每个组件实例都应该有自己独立的逻辑和数据，不应该相互影响。</p>\n<p>如果 data 返回一个对象，所有的实例会共享一个 data，多个实例数据共享会互相影响，返回的都是同一对象。</p>\n</blockquote>\n<h3 id=\"组件的传值\"><a class=\"markdownIt-Anchor\" href=\"#组件的传值\">#</a> 组件的传值</h3>\n<h4 id=\"父传子传值\"><a class=\"markdownIt-Anchor\" href=\"#父传子传值\">#</a> 父传子（传值）</h4>\n<blockquote>\n<p><strong>1. 在子组件上把父组件的值绑定在自定义属性上，</strong></p>\n<p><strong>2. 子组件通过 props 接收这个自定义属性，供自身使用</strong>。</p>\n<p>可以规定传值类型和默认值，props 接收的属性是只读的。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//可以规定 接收类型/默认值</span></span><br><span class=\"line\"><span class=\"comment\">//方式一</span></span><br><span class=\"line\">porps：&#123;</span><br><span class=\"line\">\t<span class=\"attr\">cmovies</span> :<span class=\"built_in\">Array</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//方式二</span></span><br><span class=\"line\">porps：&#123;</span><br><span class=\"line\">\t<span class=\"attr\">cmovies</span> :&#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>:<span class=\"built_in\">Array</span>,</span><br><span class=\"line\">       <span class=\"attr\">default</span>:[<span class=\"string\">&#x27;xxxx&#x27;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620190756.png\"/>\n<h4 id=\"父传子传方法\"><a class=\"markdownIt-Anchor\" href=\"#父传子传方法\">#</a> 父传子 (传方法)</h4>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620194236.png\"/>\n<h4 id=\"子传父传值\"><a class=\"markdownIt-Anchor\" href=\"#子传父传值\">#</a> 子传父（传值）</h4>\n<blockquote>\n<p><strong>1. 子组件定义一个方法，触发父组件的方法并传参，</strong></p>\n<p><strong>2. 父组件 声明 子组件触发的方法，接受参数并保存。</strong></p>\n<p><strong>3. 把父组件方法绑定在子组件上</strong></p>\n</blockquote>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620204936.png\"/>\n<h3 id=\"父子组件的访问方式\"><a class=\"markdownIt-Anchor\" href=\"#父子组件的访问方式\">#</a> 父子组件的访问方式</h3>\n<h4 id=\"父组件访问子组件\"><a class=\"markdownIt-Anchor\" href=\"#父组件访问子组件\">#</a> 父组件访问子组件</h4>\n<blockquote>\n<p><code>$children</code> : 拿所有子组件<br>\n <code>$refs</code> : 拿指定的子组件（常用）</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpm</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpm</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    // 使用$refs的时候, 在想要访问的子组件上添加ref属性</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">cpm</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;aaa&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">cpn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">buttun</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// this.$children是一个数组类型, 它包含所有子组件对象  </span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$children[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\">// $refs 的使用方法 =&gt; 对象类型, 默认是一个空的对象</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.aaa.name); <span class=\"comment\">// 得到子组件的name</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"子组件访问父组件\"><a class=\"markdownIt-Anchor\" href=\"#子组件访问父组件\">#</a> 子组件访问父组件</h4>\n<blockquote>\n<p><code>$parent</code> : 上一级父组件<br>\n <code>$root</code> : 根组件</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">//  访问父组件$parent</span></span><br><span class=\"line\"><span class=\"comment\">// 不建议使用，耦合性太强</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$parent);  </span><br><span class=\"line\"><span class=\"comment\">// 2. 访问根组件 $root</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$root);  </span><br></pre></td></tr></table></figure>\n<h3 id=\"跨级组件通信provideinject\"><a class=\"markdownIt-Anchor\" href=\"#跨级组件通信provideinject\">#</a> 跨级组件通信 provide/inject</h3>\n<blockquote>\n<p><strong>provide</strong> 选项应该是一个对象或返回一个对象的函数。该对象包含可注入其子孙的属性。</p>\n<p><strong>inject</strong> 选项应该是：一个字符串数组，或一个对象</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//祖先级组件（上级组件）</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">     <span class=\"attr\">provide</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">foo</span>:<span class=\"string\">&#x27;liuhua&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子孙级组件（下级组件）</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">inject</span>:[<span class=\"string\">&#x27;foo&#x27;</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"插槽内容分发\"><a class=\"markdownIt-Anchor\" href=\"#插槽内容分发\">#</a> 插槽（内容分发）</h3>\n<p>可称其为 <code>Vue</code>  的内容分发机制，它的主要作用就是向 <code>子组件</code> 的 <code>指定位置</code> 插入一段内容，这个内容可以是 <code>HTML</code>  或者 <code>其他的组件</code> 。</p>\n<h4 id=\"默认插槽\"><a class=\"markdownIt-Anchor\" href=\"#默认插槽\">#</a> 默认插槽</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;child&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 占位符 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span>slot默认的内容<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 使用子组件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">child</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>分发内容 <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>段落内容 <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">child</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"具名插槽\"><a class=\"markdownIt-Anchor\" href=\"#具名插槽\">#</a> 具名插槽</h4>\n<p>为了实现内容精准分发， <code>&lt;slot&gt;&lt;/slot&gt;</code>  定义一个 <code>name</code>  属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<p>使用 <code>v-slot:name</code>  或者 <code>#name</code>  往指定的 <code>插槽</code> 填充内容</p>\n<blockquote>\n<p><code>#name</code>  是 <code>v-slot:name</code>  的简写形式</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 使用子组件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">child</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:left</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>左侧组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:center</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>中间组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:rightt</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>右边组件<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">child</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"作用域插槽\"><a class=\"markdownIt-Anchor\" href=\"#作用域插槽\">#</a> 作用域插槽</h4>\n<blockquote>\n<p><strong>作用域插槽的应用场景</strong></p>\n<p>主要是为了能在子组件中访问父组件的数据</p>\n</blockquote>\n<p>实例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">&lt;!-- 用户列表 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;userList&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span> <span class=\"attr\">border</span> <span class=\"attr\">stripe</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 状态按钮渲染 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span>  <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;180&quot;</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;scope&quot;</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &#123;&#123;scope.row.mg_state&#125;&#125; 拿到这一行的数据--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 编辑用户按钮 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">size</span>=<span class=\"string\">&quot;small&quot;</span>  <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;editUser(scope.row.id)&quot;</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210621001227.png\"/>",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/02/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/",
            "url": "https://codingfxj.github.io/2021/06/02/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/",
            "title": "Vue生命周期",
            "date_published": "2021-06-02T04:39:29.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vue生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue生命周期\">#</a> Vue 生命周期</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"title\">beforeCreate</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    </span><br><span class=\"line\">    <span class=\"comment\">// 实例刚在内存中被创建出来，还没初始化好 data 和 methods 属性之前调用此函数</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    </span><br><span class=\"line\">    <span class=\"comment\">// 实例已经在内存中创建完成，此时 data 和 methods 属性初始化完成，</span></span><br><span class=\"line\">    <span class=\"comment\">//页面（HTML）加载完成之前（未开始编译模板）调用此函数。执行顺序：父组件 -&gt; 子组件</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">beforeMount</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    </span><br><span class=\"line\">    <span class=\"comment\">// 此时已经完成了模板的编译，但是还没有挂载到页面中，在挂载开始之前调用此函数</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123; &#125;, <span class=\"comment\">// 此时已经将编译好的模板，挂载到了页面指定的容器中显示。</span></span><br><span class=\"line\">    <span class=\"comment\">//页面（HTML）加载完成之后调用此函数。执行顺序：子组件 -&gt; 父组件</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">beforeUpdate</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    <span class=\"comment\">// 状态更新之前调用此函数，此时 data 中的状态值是最新的，</span></span><br><span class=\"line\">    <span class=\"comment\">//但是界面上显示的数据还是旧的，因为此时还没有开始重新渲染 DOM 节点</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">updated</span>(<span class=\"params\"></span>)</span> &#123; &#125;, <span class=\"comment\">// 状态更新完成之后调用此函数，此时 data 中的状态值和界面上显示的数据，</span></span><br><span class=\"line\">    <span class=\"comment\">//都已经完成了更新，界面已经被重新渲染</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    </span><br><span class=\"line\">    <span class=\"comment\">// 实例销毁之前调用此函数。在这一步，实例仍然完全可用</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"title\">destroyed</span>(<span class=\"params\"></span>)</span> &#123; &#125;,    <span class=\"comment\">// 实例销毁后调用此函数。该钩子被调用后，</span></span><br><span class=\"line\">    <span class=\"comment\">//对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210706190455.png\"/>\n<p><strong>流程解析图</strong></p>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210706182810.png\"/>\n<h4 id=\"beforecreate-创建前\"><a class=\"markdownIt-Anchor\" href=\"#beforecreate-创建前\">#</a> beforeCreate (创建前)</h4>\n<blockquote>\n<p>已初始化默认的事件和生命周期，el 和 data 并未初始化，</p>\n<p>无法访问 methods， data， computed 等上的方法和数据</p>\n</blockquote>\n<h4 id=\"created-创建后\"><a class=\"markdownIt-Anchor\" href=\"#created-创建后\">#</a> created ( 创建后 ）</h4>\n<blockquote>\n<p>注入和校验后，实例已经创建完成之后，此时 data 和 methods 已初始化，</p>\n<p><mark>最早</mark>可在这调用，可以调用 methods 中的方法，改变 data 中的数据。</p>\n</blockquote>\n<h4 id=\"beforemount挂载前\"><a class=\"markdownIt-Anchor\" href=\"#beforemount挂载前\">#</a> beforeMount (挂载前)</h4>\n<blockquote>\n<p>挂载前调用，相关的 render 函数首次被调用（虚拟 DOM），</p>\n<p>实例已完成以下的配置： 编译模板，把 data 里面的数据和模板生成 html，</p>\n<p>完成了 el 和 data 初始化，注意此时还没有挂在 html 到页面上。</p>\n</blockquote>\n<h4 id=\"mounted挂载后\"><a class=\"markdownIt-Anchor\" href=\"#mounted挂载后\">#</a> mounted (挂载后)</h4>\n<blockquote>\n<p>挂载完成，也就是模板中的 HTML 渲染到 HTML 页面中，此时一般可以做一些 ajax 操作，mounted 只会执行一次。</p>\n</blockquote>\n<h4 id=\"beforeupdate数据更新前\"><a class=\"markdownIt-Anchor\" href=\"#beforeupdate数据更新前\">#</a> beforeUpdate (数据更新前)</h4>\n<blockquote>\n<p>在数据更新之前被调用，发生在虚拟 DOM 重新渲染和打补丁之前，可以在该钩子中进一步地更改状态，不会触发附加地重渲染过程</p>\n</blockquote>\n<h4 id=\"updated更新后\"><a class=\"markdownIt-Anchor\" href=\"#updated更新后\">#</a> updated（更新后）</h4>\n<blockquote>\n<p>在数据更改导致的虚拟 DOM 重新渲染和打补丁后调用，此时组件 DOM 已经更新，所以执行会依赖于 DOM 的操作。</p>\n<p>在大多是情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环，该钩子在服务器端渲染期间不被调用。</p>\n</blockquote>\n<h4 id=\"beforedestroy销毁前\"><a class=\"markdownIt-Anchor\" href=\"#beforedestroy销毁前\">#</a> beforeDestroy（销毁前）</h4>\n<blockquote>\n<p>在实例销毁之前调用，实例仍然完全可用，</p>\n<ol>\n<li>这一步还可以用 this 来获取实例，</li>\n<li>一般在这一步做一些重置的操作，比如清除掉组件中的定时器 和 dom 监听事件。</li>\n</ol>\n</blockquote>\n<h4 id=\"destroyed销毁后\"><a class=\"markdownIt-Anchor\" href=\"#destroyed销毁后\">#</a> destroyed（销毁后）</h4>\n<blockquote>\n<p>在实例销毁之后调用，调用后，所以的事件监听器会被移出，所有的子实例也会被销毁，该钩子在服务器端渲染期间不被调用。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>vue生命周期学习<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcss.com/vue/2.4.2/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Vue的生命周期&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">beforeCreate</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;------beforeCreate创建前状态------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span> , <span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el); <span class=\"comment\">//undefined</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); <span class=\"comment\">//undefined </span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message) </span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">created</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;------created创建完毕状态------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el); <span class=\"comment\">//undefined</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); <span class=\"comment\">//已被初始化 </span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); <span class=\"comment\">//已被初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">beforeMount</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;------beforeMount挂载前状态------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + (<span class=\"built_in\">this</span>.$el)); <span class=\"comment\">//已被初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); <span class=\"comment\">//已被初始化  </span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); <span class=\"comment\">//已被初始化  </span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">mounted</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;------mounted 挂载结束状态------&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el); <span class=\"comment\">//已被初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el);    </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); <span class=\"comment\">//已被初始化</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); <span class=\"comment\">//已被初始化 </span></span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">beforeUpdate</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;beforeUpdate 更新前状态===============》&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el);   </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); </span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">updated</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;updated 更新完成状态===============》&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el); </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); </span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">beforeDestroy</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;beforeDestroy 销毁前状态===============》&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el);    </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message); </span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"attr\">destroyed</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.group(<span class=\"string\">&#x27;destroyed 销毁完成状态===============》&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;el     : &quot;</span> + <span class=\"built_in\">this</span>.$el);</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$el);  </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;data   : &quot;</span> + <span class=\"built_in\">this</span>.$data); </span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c%s&quot;</span>, <span class=\"string\">&quot;color:red&quot;</span>,<span class=\"string\">&quot;message: &quot;</span> + <span class=\"built_in\">this</span>.message)</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">  &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620224448.png\"/>\n<p><strong>简易版流程：</strong></p>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620225130.png\"/>\n<h4 id=\"文章参考\"><a class=\"markdownIt-Anchor\" href=\"#文章参考\">#</a> <a href=\"https://blog.csdn.net/weixin_42707287/article/details/111641286?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162420150816780271522940%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=162420150816780271522940&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~hot_rank-1-111641286.first_rank_v2_pc_rank_v29&amp;utm_term=vue+%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%BD%A0&amp;spm=1018.2226.3001.4187\">文章参考</a></h4>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\"><label for=\"cbx_0\"> 熟悉</label></li>\n</ul>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/02/Vue%E5%B1%9E%E6%80%A7/",
            "url": "https://codingfxj.github.io/2021/06/02/Vue%E5%B1%9E%E6%80%A7/",
            "title": "Vue属性",
            "date_published": "2021-06-02T04:38:35.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vue-常用属性\"><a class=\"markdownIt-Anchor\" href=\"#vue-常用属性\">#</a> Vue 常用属性</h2>\n<h3 id=\"整体总结\"><a class=\"markdownIt-Anchor\" href=\"#整体总结\">#</a> 整体总结</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">      <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,    <span class=\"comment\">// 控制区域</span></span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123; &#125;,    <span class=\"comment\">// 定义数据</span></span><br><span class=\"line\">      <span class=\"attr\">methods</span>: &#123; &#125;,    <span class=\"comment\">// 定义事件方法</span></span><br><span class=\"line\">   \t  <span class=\"attr\">computed</span>:&#123;&#125;\t\t<span class=\"comment\">//定义data数据逻辑处理方法</span></span><br><span class=\"line\">      <span class=\"attr\">watch</span>:&#123; &#125;    <span class=\"comment\">// 监听值的变化，然后执行相对应的函数</span></span><br><span class=\"line\">      <span class=\"attr\">filters</span>: &#123; &#125;,    <span class=\"comment\">// 定义私有的过滤器</span></span><br><span class=\"line\">      <span class=\"attr\">directives</span>: &#123; &#125;,    <span class=\"comment\">// 自定义指令</span></span><br><span class=\"line\">      <span class=\"attr\">components</span>: &#123; &#125;,    <span class=\"comment\">// 定义实例内部私有的组件</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"> </span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算属性computed\"><a class=\"markdownIt-Anchor\" href=\"#计算属性computed\">#</a> 计算属性 computed</h3>\n<blockquote>\n<p><strong>计算属性是基于它们的响应式依赖进行缓存的，只在相关响应式依赖发生改变时它们才会重新求值</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>当其他的依赖数据没有发生改变，它调用的是缓存的数据，极大的提高了程序的性能</strong></p>\n</blockquote>\n<h4 id=\"computed与methods的区别\"><a class=\"markdownIt-Anchor\" href=\"#computed与methods的区别\">#</a> computed 与 methods 的区别</h4>\n<p><strong>computed:</strong></p>\n<blockquote>\n<ol>\n<li>\n<p>只对 data 数据进行复杂逻辑处理，</p>\n</li>\n<li>\n<p>初始化执行过后，只要任何值有更新，computed 和其相关的值都会更新，</p>\n</li>\n<li>\n<p>执行会被缓存起来，不必在数据没有发生改变的时候重新获取数据的值，效率高</p>\n</li>\n<li>\n<p>不能执行异步操作</p>\n</li>\n</ol>\n</blockquote>\n<p><strong>methods</strong> :</p>\n<blockquote>\n<p>调用的时候才会执行对应的方法，每次都会重新计算，不会自动同步数据</p>\n</blockquote>\n<h4 id=\"计算属性的-setter-getter\"><a class=\"markdownIt-Anchor\" href=\"#计算属性的-setter-getter\">#</a> 计算属性的 setter/getter</h4>\n<p>计算属性默认只有 getter，不过在需要时你也可以提供一个 setter</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">    <span class=\"attr\">value</span>: <span class=\"number\">298</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\"> \t<span class=\"attr\">pvalue</span>:&#123;</span><br><span class=\"line\">         get&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.value * <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value / <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听属性watch\"><a class=\"markdownIt-Anchor\" href=\"#监听属性watch\">#</a> 监听属性 watch</h3>\n<p>watch 中可以执行任何逻辑，如函数节流，Ajax 异步获取数据，甚至操作 DOM（不建议）</p>\n<blockquote>\n<p><strong>三个参数：</strong></p>\n<p>handler 回调函数</p>\n<p>deep ：Boolean 值</p>\n<p>immediate ：Boolean 值</p>\n</blockquote>\n<blockquote>\n<p>immediate 为 true 时，当组件初始化时就已经开始监听（即 beforeCreate 阶段）</p>\n<p>​\t\t\t\t\t为 false 时，只有改变时才会监听</p>\n</blockquote>\n<blockquote>\n<p>deep 可以检测到对象内部属性的变化。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">message</span>:&#123;</span><br><span class=\"line\">            <span class=\"attr\">msg</span>:<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"> <span class=\"attr\">watch</span>:&#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"title\">name</span>(<span class=\"params\">newValue,oldValue</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//普通的watch监听</span></span><br><span class=\"line\">         <span class=\"built_in\">console</span>.log(newValue,oldValue)</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     <span class=\"attr\">message</span>: &#123;<span class=\"comment\">//深度监听，可监听到对象、数组的变化</span></span><br><span class=\"line\">         <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newVal, oldVal</span>)</span>&#123;</span><br><span class=\"line\">         \t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot; &quot;</span>+newVal.msg, oldVal.msg);</span><br><span class=\"line\">     \t  &#125;,</span><br><span class=\"line\">     \t<span class=\"attr\">deep</span>:<span class=\"literal\">true</span> <span class=\"comment\">//true 深度监听</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"watch与computed\"><a class=\"markdownIt-Anchor\" href=\"#watch与computed\">#</a> watch 与 computed</h4>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210620214144.png\"/>\n<blockquote>\n<p>watch：监测的是属性值， 只要属性值发生变化，其都会触发执行回调函数来执行一系列操作。</p>\n<p>computed：监测的是依赖值，依赖值不变的情况下其会直接读取缓存进行复用，变化的情况下才会重新计算。</p>\n</blockquote>\n<p><strong>注意</strong>：<strong>计算属性不能执行异步任务，计算属性必须同步执行。也就是说计算属性不能向服务器请求或者执行异步任务。</strong></p>\n<h3 id=\"过滤器filters\"><a class=\"markdownIt-Anchor\" href=\"#过滤器filters\">#</a> 过滤器 filters</h3>\n<p>用于格式化变量内容的输出。（日期格式化，字母大小写，数字再计算等等）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;message | toupper &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>现在的vue.js学习进度是&#123;&#123;num&#125;&#125;(&#123;&#123;num | topercentage&#125;&#125;)。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;hello vue.js world.&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">num</span>: <span class=\"number\">0.3</span></span><br><span class=\"line\">&#125;,\t</span><br><span class=\"line\"><span class=\"attr\">filters</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">toupper</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value.toUpperCase();</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">topercentage</span>(<span class=\"params\">value</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value * <span class=\"number\">100</span> + <span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义指令directives\"><a class=\"markdownIt-Anchor\" href=\"#自定义指令directives\">#</a> 自定义指令 directives</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.directive(<span class=\"string\">&#x27;my-directive&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">bind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,<span class=\"comment\">// 指令与被绑定元素第一次绑定时触发，通常做一些事件监听的初始化</span></span><br><span class=\"line\">  <span class=\"attr\">inserted</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,<span class=\"comment\">// 绑定元素插入父节点时调用（父节点存在即可调用，不必存在于 document 中）。</span></span><br><span class=\"line\">  <span class=\"attr\">update</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,<span class=\"comment\">// 被绑定元素内容发生变化时触发，可接受参数，在这里也可以进行事件监听的初始化</span></span><br><span class=\"line\">  <span class=\"attr\">componentUpdated</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;,<span class=\"comment\">// 被绑定元素所在模板完成一次更新周期时调用。</span></span><br><span class=\"line\">  <span class=\"attr\">unbind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;<span class=\"comment\">// 指令与元素解绑时触发，比如通过路由转跳页面时需要解绑指令</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input v-focus  value=<span class=\"string\">&#x27;&#x27;</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">//新页面input自动获取焦点</span></span><br><span class=\"line\">Vue.directive(<span class=\"string\">&#x27;focus&#x27;</span>, &#123;</span><br><span class=\"line\">  \t<span class=\"comment\">// 当绑定元素插入到 DOM 中。</span></span><br><span class=\"line\">  \t<span class=\"attr\">inserted</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el,binding</span>) </span>&#123;</span><br><span class=\"line\">    \t\t<span class=\"comment\">// 聚焦元素</span></span><br><span class=\"line\">    \t\tel.focus();</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/01/Vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "url": "https://codingfxj.github.io/2021/06/01/Vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "title": "Vue基础语法",
            "date_published": "2021-06-01T11:44:29.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vue基础语法\"><a class=\"markdownIt-Anchor\" href=\"#vue基础语法\">#</a> Vue 基础语法</h2>\n<h3 id=\"mustache语法\"><a class=\"markdownIt-Anchor\" href=\"#mustache语法\">#</a> Mustache 语法</h3>\n<h4 id=\"v-text\"><a class=\"markdownIt-Anchor\" href=\"#v-text\">#</a> v-text</h4>\n<p>使用场景：<strong>不做解析</strong>，直接 展示的数据中包含 <em><strong>元素标签</strong></em> 或者 <em><strong>样式</strong></em></p>\n<p>只能用在双标签中</p>\n<h4 id=\"v-html\"><a class=\"markdownIt-Anchor\" href=\"#v-html\">#</a> v-html</h4>\n<p><strong>会解析</strong>数据中的<em><strong>标签</strong></em> 和 <em><strong>样式</strong></em></p>\n<p><strong>v-text 与 v-html 对比</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;msgText&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>  <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;msgHtml&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;                </span><br><span class=\"line\">    <span class=\"attr\">msgText</span>:<span class=\"string\">`&lt;span style =&quot;color:red&quot;&gt; Hello Vue!&lt;/span&gt;`</span>,</span><br><span class=\"line\">    <span class=\"attr\">msgHtml</span>: <span class=\"string\">`&lt;span style =&quot;color:red&quot;&gt; Hello Vue!&lt;/span&gt;`</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<p><img src=\"Vue%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.assets/20210620175108.png\" alt=\"\"></p>\n<h4 id=\"v-cloak\"><a class=\"markdownIt-Anchor\" href=\"#v-cloak\">#</a> v-cloak</h4>\n<p>使用场景：网络较慢，网页还在加载 Vue.js ，而导致 Vue 来不及渲染，解决屏幕闪动的问题</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[v-cloak]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span> <span class=\"attr\">v-cloak</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;message&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-once\"><a class=\"markdownIt-Anchor\" href=\"#v-once\">#</a> v-once</h4>\n<p>后面不需要跟任何表达式，表示元素和组件只渲染一次，不会随着数据的改变而变化，</p>\n<p>信息后续不需要再修改时，可使用 v-once，提高性能</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-once</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&#x27;count++&#x27;</span>&gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-bind\"><a class=\"markdownIt-Anchor\" href=\"#v-bind\">#</a> v-bind</h4>\n<p>作用：动态绑定属性<br>\n简写: :</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!--绑定变量 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>click me<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--绑定对象 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:class</span>=<span class=\"string\">&quot;&#123;active:isActive&#125;&quot;</span>&gt;</span>click me<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n<h4 id=\"v-show\"><a class=\"markdownIt-Anchor\" href=\"#v-show\">#</a> v-show</h4>\n<p><strong>v-if 和 v-show 的区别:</strong></p>\n<blockquote>\n<p><strong>v-if</strong> : 通过 Boolean 值 false/true，根据表达式 重建或销毁元素、</p>\n<p>组件以及所绑定的事件（适合不频繁切换显示和隐藏）</p>\n<p><strong>v-show</strong>: 通过切换 display 属性值来显示和隐藏，适合频繁切换状态</p>\n</blockquote>\n<h4 id=\"v-for\"><a class=\"markdownIt-Anchor\" href=\"#v-for\">#</a> v-for</h4>\n<p>遍历数组</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- name: [&#x27;zhangsan&#x27;, &#x27;lisi&#x27;, &#x27;wangwu&#x27;, &#x27;zhoaliu&#x27;] --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in name&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>遍历对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- person: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                    name: &#x27;张三&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">                    age: 18,</span></span><br><span class=\"line\"><span class=\"comment\">                    sex: &#x27;男&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">                    height: 185</span></span><br><span class=\"line\"><span class=\"comment\">                &#125; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&#x27;(value,key,index) in person&#x27;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123;value&#125;&#125;---&#123;&#123;key&#125;&#125;-----&#123;&#123;index&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"条件渲染-v-if\"><a class=\"markdownIt-Anchor\" href=\"#条件渲染-v-if\">#</a> 条件渲染 v-if</h4>\n<p><strong>v-if、v-else-if 、v-else</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">     A</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">     B</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">     C</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：当 v-if 和 v-else 有相同控件时，会共享，需添加 key='xxx’进行区分， key 不同他会重新创建</p>\n<p>当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级</p>\n</blockquote>\n<h4 id=\"事件监听-v-on\"><a class=\"markdownIt-Anchor\" href=\"#事件监听-v-on\">#</a> 事件监听 v-on</h4>\n<p>作用：绑定事件监听<br>\n简写: @</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v-on:eventNmae=<span class=\"string\">&quot;func()&quot;</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">修饰符</th>\n<th style=\"text-align:center\">作用</th>\n<th style=\"text-align:center\">实际调用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">.stop</td>\n<td style=\"text-align:center\">阻止事件冒泡</td>\n<td style=\"text-align:center\">event.stopPropagation()</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.prevent</td>\n<td style=\"text-align:center\">阻止默认事件</td>\n<td style=\"text-align:center\">event.preventDefault()</td>\n</tr>\n<tr>\n<td style=\"text-align:center\" keyCode=\"\" I=\"\" keyAlias=\"\"></td>\n<td style=\"text-align:center\">监听某个键盘的键帽</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.native</td>\n<td style=\"text-align:center\">监听组件根元素的原生事件</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.once</td>\n<td style=\"text-align:center\">只触发一次回调</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span> = <span class=\"string\">&#x27;#app&#x27;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--情况一: 方法没有参数--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick1&quot;</span>&gt;</span>按钮1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick1()&quot;</span>&gt;</span>按钮1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--情况二: 如果方法有参数--&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--1.调用时不传入参数并省略括号,会默认将event作为第一个参数传入--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick2&quot;</span>&gt;</span>按钮2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--2.调用时不传入参数并不省略括号,那么参数为undefined--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick2()&quot;</span>&gt;</span>按钮2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--情况三: 如果方法有参数,并且希望传入event--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick3(10, $event)&quot;</span>&gt;</span>按钮3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnClick1</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;按钮1被点击&#x27;</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnClick2</span>(<span class=\"params\">payload</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;按钮2被点击&#x27;</span>, payload);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnClick3</span>(<span class=\"params\">num, event</span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;按钮3被点击&#x27;</span>, num, event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"双向绑定-v-model\"><a class=\"markdownIt-Anchor\" href=\"#双向绑定-v-model\">#</a> 双向绑定 v-model</h4>\n<p>实现表单元素和数据的双向绑定</p>\n<p><strong>原理</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&#x27;message&#x27;</span> @<span class=\"attr\">input</span>=<span class=\"string\">&#x27;showmodel&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> data: &#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Hello VUE&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"> <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">showmodel</span>(<span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.message = e.target.value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>绑定 radio</strong></p>\n<blockquote>\n<p>data 数据</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">        <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Hello VUE&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">isAgree</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">fruits</span>: [],</span><br><span class=\"line\">            <span class=\"attr\">fruits1</span>: [<span class=\"string\">&#x27;桃子&#x27;</span>, <span class=\"string\">&#x27;香蕉&#x27;</span>, <span class=\"string\">&#x27;葡萄&#x27;</span>, <span class=\"string\">&#x27;火龙果&#x27;</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;male1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">value</span> = <span class=\"string\">&#x27;男&#x27;</span><span class=\"attr\">id</span>=<span class=\"string\">&#x27;male1&#x27;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;sex&#x27;</span>&gt;</span>男</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;female1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">value</span> = <span class=\"string\">&#x27;女&#x27;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;female1&quot;</span> <span class=\"attr\">v-model</span>= <span class=\"string\">&#x27;sex&#x27;</span>&gt;</span>女</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>绑定 checkbox 单选框</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;agree&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">inout</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;agree&quot;</span>  <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;isAgree&quot;</span>&gt;</span>同意协议</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">buttion</span> <span class=\"attr\">:disabled</span>=<span class=\"string\">&quot;!isAgree&quot;</span>&gt;</span>下一步<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>绑定 checkbox 多选框</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;ch1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>= <span class=\"string\">&#x27;ch1&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;苹果&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits&#x27;</span>&gt;</span>苹果</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;ch2&quot;</span>&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;ch2&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;香蕉&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits&#x27;</span>&gt;</span>香蕉</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;ch3&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ch3&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;橘子&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits&#x27;</span>&gt;</span>橘子</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;ch3&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;ch4&#x27;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;葡萄&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits&#x27;</span>&gt;</span>葡萄</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>你喜欢的水果：&#123;&#123;fruits&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 多选值绑定 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">:for</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&#x27;item in fruits1&#x27;</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">:id</span>= <span class=\"string\">&#x27;item&#x27;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&quot;item&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits1&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;</span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>你喜欢的水果：&#123;&#123;fruits1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>绑定 select 单选</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;a&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;苹果&quot;</span>&gt;</span>苹果<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;葡萄&quot;</span>&gt;</span>葡萄<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;橘子&quot;</span>&gt;</span>橘子<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;香蕉&quot;</span>&gt;</span>香蕉<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;桃子&quot;</span>&gt;</span>桃子<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>你喜欢的水果是:&#123;&#123;fruits1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>绑定 select 多选</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;abc&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&#x27;fruits1&#x27;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\">           ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>你喜欢的水果是:&#123;&#123;fruits1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>v-model 修饰符</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">&lt;!-- 懒加载，enter和 触发onbulr 才会刷新 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&#x27;str&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;str&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 转化为数字类型 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">&#x27;name&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;-----&#123;&#123;typeof name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 去两端空格 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model.trim</span>=<span class=\"string\">&#x27;strtrim&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;strtrim&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/01/Vue%E7%9A%84axios/",
            "url": "https://codingfxj.github.io/2021/06/01/Vue%E7%9A%84axios/",
            "title": "Vue的axios",
            "date_published": "2021-05-31T16:15:37.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"axios\"><a class=\"markdownIt-Anchor\" href=\"#axios\">#</a> Axios</h2>\n<h3 id=\"promise对象\"><a class=\"markdownIt-Anchor\" href=\"#promise对象\">#</a> Promise 对象</h3>\n<h4 id=\"promise-简介\"><a class=\"markdownIt-Anchor\" href=\"#promise-简介\">#</a> Promise 简介</h4>\n<p>Promise 对象代表了未来将要发生的事件，用来传递异步操作的消息，可以解决地狱回调，并可以异步处理和观察任务进度。</p>\n<blockquote>\n<p>1、主要用于异步计算<br>\n 2、可以将异步操作队列化，按照期望的顺序执行，返回符合预期的结果<br>\n 3、可以在对象之间传递和操作 promise，帮助我们处理队列</p>\n</blockquote>\n<h4 id=\"promise-状态\"><a class=\"markdownIt-Anchor\" href=\"#promise-状态\">#</a> Promise 状态</h4>\n<p>一个 Promise 必然处于以下几种状态之一：</p>\n<blockquote>\n<p>待定（pending）: 初始状态，既没有被兑现，也没有被拒绝。<br>\n已兑现（fulfilled）: 意味着操作成功完成。<br>\n已拒绝（rejected）: 意味着操作失败。</p>\n</blockquote>\n<h4 id=\"promise-优缺点\"><a class=\"markdownIt-Anchor\" href=\"#promise-优缺点\">#</a> Promise 优缺点</h4>\n<blockquote>\n<p><strong>优</strong>：将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。</p>\n<p>​\t\t提供统一的接口，使得控制异步操作更加方便。</p>\n</blockquote>\n<blockquote>\n<p><strong>缺</strong>：无法取消 Promise，一旦新建它就会立即执行，无法中途取消。</p>\n<p>​\t\t如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部。</p>\n<p>​\t\t当处于 Pending 状态时，无法得知目前进展到哪一个阶段</p>\n</blockquote>\n<h4 id=\"promise-创建\"><a class=\"markdownIt-Anchor\" href=\"#promise-创建\">#</a> Promise 创建</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// resolve 和 reject 是回调函数</span></span><br><span class=\"line\">    <span class=\"comment\">//异步代码执行成功时，调用resolve(...), 失败时调用reject(...)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"resolve与reject\"><a class=\"markdownIt-Anchor\" href=\"#resolve与reject\">#</a> resolve 与 reject</h4>\n<blockquote>\n<p><strong>resolve</strong>：将 Promise 对象的状态从 “未完成” 变为 “成功”（即从 pending 变为 resolved），</p>\n<p>​\t\t\t\t在异步操作成功时调用，并将异步操作的结果，作为参数传递出去。<br>\n<strong>reject</strong>：将 Promise 对象的状态从 “未完成” 变为 “失败”（即从 pending 变为 rejected），</p>\n<p>​\t\t\t 在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。</p>\n</blockquote>\n<p>栗子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 一段耗时的异步操作</span></span><br><span class=\"line\">    resolve(<span class=\"string\">&#x27;成功&#x27;</span>) <span class=\"comment\">// 数据处理完成</span></span><br><span class=\"line\">    <span class=\"comment\">// reject(&#x27;失败&#x27;) // 数据处理出错</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">).then(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;<span class=\"built_in\">console</span>.log(res)&#125;,  <span class=\"comment\">// 成功</span></span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;<span class=\"built_in\">console</span>.log(err)&#125; <span class=\"comment\">// 失败</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"then方法\"><a class=\"markdownIt-Anchor\" href=\"#then方法\">#</a> then 方法</h4>\n<blockquote>\n<p>接收两个函数作为参数，分别代表 fulfilled（成功）和 rejected（失败）</p>\n<p>then () 返回一个新的 Promise 实例，所以它可以链式调用</p>\n</blockquote>\n<h4 id=\"catch方法\"><a class=\"markdownIt-Anchor\" href=\"#catch方法\">#</a> catch 方法</h4>\n<blockquote>\n<p>then 方法第二个回调函数的语法糖，catch 也会返回一个 promise 实例，并且是 resolved 状态</p>\n</blockquote>\n<p><strong>错误处理两种做法：</strong><br>\n第一种：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">promise.then(<span class=\"function\">() =&gt;</span> &#123;成功处理逻辑&#125;, <span class=\"function\">() =&gt;</span> &#123;错误处理逻辑&#125;)</span><br></pre></td></tr></table></figure>\n<p>第二种：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">promise.then(<span class=\"function\">() =&gt;</span> &#123;成功处理逻辑&#125;) .catch( <span class=\"function\">() =&gt;</span> &#123;错误处理逻辑&#125;)<span class=\"comment\">//推荐</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"promise链式调用\"><a class=\"markdownIt-Anchor\" href=\"#promise链式调用\">#</a> Promise 链式调用</h4>\n<p>避免了地狱回调</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sendRequest(<span class=\"string\">&#x27;test1.html&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data1</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;第一次请求成功, 这是返回的数据:&#x27;</span>, data1);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sendRequest(<span class=\"string\">&#x27;test2.html&#x27;</span>, data1);</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;第二次请求成功, 这是返回的数据:&#x27;</span>, data2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sendRequest(<span class=\"string\">&#x27;test3.html&#x27;</span>, data2);</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data3</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;第三次请求成功, 这是返回的数据:&#x27;</span>, data3);</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//用catch捕捉前面的错误</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;sorry, 请求失败了, 这是失败信息:&#x27;</span>, error);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"axios-2\"><a class=\"markdownIt-Anchor\" href=\"#axios-2\">#</a> Axios</h3>\n<p>Axios 是一个基于 promise 的 HTTP 库</p>\n<h4 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> <strong>优点</strong></h4>\n<blockquote>\n<p>支持浏览器和 node.js<br>\n 支持 promise<br>\n 能拦截请求和响应<br>\n能转换请求和响应数据<br>\n能取消请求<br>\n自动转换 JSON 数据<br>\n浏览器端支持防止 CSRF (跨站请求伪造)</p>\n</blockquote>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install axios --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参数</span></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;连接地址 path参数直接放里面&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;post 默认是 get&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">params</span>: <span class=\"string\">&#x27;必须是一个无格式对象 query参数&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">&#x27;是作为请求主体被发送的数据 body参数&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">    <span class=\"attr\">headers</span>: <span class=\"string\">&#x27;object 发送的自定义请求头&#x27;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"get请求\"><a class=\"markdownIt-Anchor\" href=\"#get请求\">#</a> get 请求</h4>\n<p><strong>方式一</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">method</span>:<span class=\"string\">&#x27;get&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">url</span>:<span class=\"string\">&#x27;你的地址&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">params</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">   \t\t headers:&#123;</span><br><span class=\"line\">        <span class=\"comment\">//内容格式: 上传文件或普通请求</span></span><br><span class=\"line\">        <span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;,</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//自定义头部</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;X-Custom-Header&#x27;</span>: <span class=\"string\">&#x27;123456789132456789&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).then(<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//输出返回数据</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.data)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//输出错误信息</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>方式二</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.get(<span class=\"string\">&#x27;url地址&#x27;</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">params</span>:&#123;<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">        <span class=\"comment\">//自定义头部</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;X-Custom-Header&#x27;</span>: <span class=\"string\">&#x27;123456789132456789&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;).then(<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出返回数据</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(data.data)</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出错误信息</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(error)</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"post请求\"><a class=\"markdownIt-Anchor\" href=\"#post请求\">#</a> post 请求</h4>\n<p><strong>方式一</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> post_data = &#123;...&#125;;</span><br><span class=\"line\">post_data.append(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">method</span>:<span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">url</span>:<span class=\"string\">&#x27;url地址&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">data</span>:post_data,</span><br><span class=\"line\">    <span class=\"comment\">//post可以混用get的传参</span></span><br><span class=\"line\">    <span class=\"comment\">//params:&#123;b:2&#125;;</span></span><br><span class=\"line\">    <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">        <span class=\"comment\">//普通请求</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//上传文件或普通请求</span></span><br><span class=\"line\">        <span class=\"comment\">// &#x27;Content-Type&#x27;: &#x27;multipart/form-data&#x27;,</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//自定义头部</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;X-Custom-Header&#x27;</span>: <span class=\"string\">&#x27;123456789132456789&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).then(<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//输出返回数据</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data.data)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//输出错误信息</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(error)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>方式二</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.post(<span class=\"string\">&#x27;url地址&#x27;</span>,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">data</span>:post_data</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">headers</span>:&#123;</span><br><span class=\"line\">        <span class=\"comment\">//自定义头部</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;X-Custom-Header&#x27;</span>: <span class=\"string\">&#x27;123456789132456789&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;).then(<span class=\"function\">(<span class=\"params\">data</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出返回数据</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(data.data)</span><br><span class=\"line\">    &#125;).catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出错误信息</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(error)</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>axios 方法</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios(config)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.request(config)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.get(url[, config])</span><br><span class=\"line\"></span><br><span class=\"line\">axios.delete(url[, config])</span><br><span class=\"line\"></span><br><span class=\"line\">axios.head(url[, config])</span><br><span class=\"line\"></span><br><span class=\"line\">axios.post(url[, data[, config]])</span><br><span class=\"line\"></span><br><span class=\"line\">axios.put(url[, data[, config]])</span><br><span class=\"line\"></span><br><span class=\"line\">axios.patch(url[, data[, config]])</span><br></pre></td></tr></table></figure>\n<p><strong>公共配置</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.defaults.baseURL = <span class=\"string\">&quot;公共的url&quot;</span></span><br><span class=\"line\">axios.defaults.timtout = <span class=\"number\">5000</span>      <span class=\"comment\">//请求超时时间，毫秒单位</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建axios实例\"><a class=\"markdownIt-Anchor\" href=\"#创建axios实例\">#</a> 创建 axios 实例</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> instance1 = axios.create(&#123;</span><br><span class=\"line\">  <span class=\"attr\">baseURL</span>: <span class=\"string\">&quot;https://www.baidu.com/&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">instance1(&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&quot;/home&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">params</span>:&#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"axios模块封装\"><a class=\"markdownIt-Anchor\" href=\"#axios模块封装\">#</a> axios 模块封装</h4>\n<blockquote>\n<p>网络封装原因：部署环境切换以后，方便改域名（开发环境，测试环境，生成环境）</p>\n</blockquote>\n<p><strong>封装实例一</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\">axios.defaults.baseURL = <span class=\"string\">&#x27;http://127.0.0.1:8888/api/private/v1/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(config);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取本地token</span></span><br><span class=\"line\">    config.headers.Authorization = <span class=\"built_in\">window</span>.sessionStorage.getItem(<span class=\"string\">&#x27;token&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">Vue.prototype.$http = axios</span><br></pre></td></tr></table></figure>\n<p><strong>使用：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"title\">getUserList</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;<span class=\"attr\">data</span> : res&#125;  = <span class=\"keyword\">await</span>  <span class=\"built_in\">this</span>.$http.get(<span class=\"string\">&#x27;users&#x27;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p><strong>封装实例二</strong></p>\n<blockquote>\n<p><strong>在 network/request.js 下 axios 的封装</strong></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">request</span>(<span class=\"params\">config</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> instance = axios.create(&#123;</span><br><span class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">&quot;http://www.baidu.com/&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">5000</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> instance(config)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>调用 axios 模块的组件中</strong></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;request&#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;network/request.js&quot;</span></span><br><span class=\"line\">request(&#123;</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&quot;/home&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">params</span>:&#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>:<span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/01/VueX/",
            "url": "https://codingfxj.github.io/2021/06/01/VueX/",
            "title": "VueX",
            "date_published": "2021-05-31T16:14:55.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vuex状态管理\"><a class=\"markdownIt-Anchor\" href=\"#vuex状态管理\">#</a> VueX 状态管理</h2>\n<h3 id=\"vuex的三个主要部分\"><a class=\"markdownIt-Anchor\" href=\"#vuex的三个主要部分\">#</a> vuex 的三个主要部分</h3>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210621011026.png\"/>\n<h3 id=\"运用\"><a class=\"markdownIt-Anchor\" href=\"#运用\">#</a> 运用</h3>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i vuex -s</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化store\"><a class=\"markdownIt-Anchor\" href=\"#初始化store\">#</a> 初始化 store</h4>\n<p>在项目的根目录下新增一个 store 文件夹，在该文件夹内创建 <code>index.js</code> ，初始化内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//挂载Vuex</span></span><br><span class=\"line\">Vue.use(Vuex)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建VueX对象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    <span class=\"attr\">state</span>:&#123;</span><br><span class=\"line\">        <span class=\"comment\">//存放的键值对就是所要管理的状态</span></span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;helloVueX&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n<h4 id=\"挂载到vue\"><a class=\"markdownIt-Anchor\" href=\"#挂载到vue\">#</a> 挂载到 vue</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  router,</span><br><span class=\"line\">  store,  <span class=\"comment\">//创建的Vuex实例挂载到这个vue实例中</span></span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"在组件中使用vuex\"><a class=\"markdownIt-Anchor\" href=\"#在组件中使用vuex\">#</a> 在组件中使用 Vuex</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;app&#x27;</span>&gt;</span></span><br><span class=\"line\">        name:</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; $store.state.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"vuex中的核心内容\"><a class=\"markdownIt-Anchor\" href=\"#vuex中的核心内容\">#</a> VueX 中的核心内容</h3>\n<h4 id=\"成员列表\"><a class=\"markdownIt-Anchor\" href=\"#成员列表\">#</a> 成员列表</h4>\n<blockquote>\n<p><strong>state ：存放状态</strong><br>\n<strong> mutations ：state 成员操作</strong><br>\n<strong> getters ：加工 state 成员给外界</strong><br>\n<strong> actions： 异步操作</strong><br>\n<strong> modules ：模块化状态管理</strong></p>\n</blockquote>\n<h4 id=\"vuex的工作流程\"><a class=\"markdownIt-Anchor\" href=\"#vuex的工作流程\">#</a> VueX 的工作流程</h4>\n<img src=\"https://gitee.com/GiteeFXJ/picstore/raw/master/codepic/20210621012119.png\"/>\n<h4 id=\"state\"><a class=\"markdownIt-Anchor\" href=\"#state\">#</a> state</h4>\n<p>state 提供唯一的公共数据源，所有的共享数据都要统一放到 Store 的 state 中存储</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">  \t<span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>组件访问 state 数据方式一：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$store.state.全局数据名称</span><br></pre></td></tr></table></figure>\n<p><strong>组件访问 state 数据方式二：</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从vuex中按需导入mapState函数</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span> </span><br></pre></td></tr></table></figure>\n<p>通过导入的 mapState 函数，将当前组件需要的全局数据，映射为当前组件的 computed 计算属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed:&#123;<span class=\"comment\">// 解构赋值使用辅助函数,</span></span><br><span class=\"line\">\t...mapState([<span class=\"string\">&#x27;count&#x27;</span>])<span class=\"comment\">//可在当前组价直接使用 &#123;&#123;count&#125;&#125;展示数据</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"mutations\"><a class=\"markdownIt-Anchor\" href=\"#mutations\">#</a> mutations</h4>\n<p>专门用于变更 store 中的数据</p>\n<blockquote>\n<p>只能通过 <code>mutation</code>  变更 <code>state</code>  数据，</p>\n<p>可以监控数据变化</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">  \t<span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">  &#125;，</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">   \t \t<span class=\"function\"><span class=\"title\">add</span>(<span class=\"params\">state</span>)</span>&#123;</span><br><span class=\"line\">   \t\t \tstate.count++</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">addN</span>(<span class=\"params\">state ,num</span>)</span>&#123;</span><br><span class=\"line\">   \t\t \tstate.count += num</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>触发 mutation 方式一</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handle1</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.$store.commit(<span class=\"string\">&#x27;add&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">handle2</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//触发时携带参数</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.$store.commit(<span class=\"string\">&#x27;addN&#x27;</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>触发 mutation 方式二</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapMutations &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//映射为当前组件的methods中</span></span><br><span class=\"line\"><span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">\t...mapMutations([<span class=\"string\">&#x27;add&#x27;</span>,<span class=\"string\">&#x27;addN&#x27;</span>])<span class=\"comment\">// 解构赋值使用辅助函数 </span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnHandle1</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.add()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnHandle2</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.addN(<span class=\"number\">5</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"actions\"><a class=\"markdownIt-Anchor\" href=\"#actions\">#</a> actions</h4>\n<p>用于处理异步任务</p>\n<blockquote>\n<p><code>mutation</code>  中不能执行异步操作，但是 <code>actions</code>  不能直接修改 <code>state</code>  中的数据，</p>\n<p>必须通过 <code>context.commit()</code>  触发 <code>mutation</code>  间接变更数据</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    /...</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>:&#123;</span><br><span class=\"line\">   \t \t<span class=\"function\"><span class=\"title\">add</span>(<span class=\"params\">state</span>)</span>&#123;</span><br><span class=\"line\">   \t\t \tstate.count++</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">addN</span>(<span class=\"params\">state, num</span>)</span>&#123;</span><br><span class=\"line\">       \t  state.count += num</span><br><span class=\"line\">  \t   &#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">   <span class=\"attr\">actions</span>:&#123;</span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">addAsync</span>(<span class=\"params\">context</span>)</span>&#123;</span><br><span class=\"line\">           <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">               context.commit(<span class=\"string\">&#x27;add&#x27;</span>)<span class=\"comment\">//context.commit()触发mutation</span></span><br><span class=\"line\">           &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">       &#125;，</span><br><span class=\"line\">       <span class=\"function\"><span class=\"title\">addNAsync</span>(<span class=\"params\">context</span>)</span>&#123;</span><br><span class=\"line\">           <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">               context.commit(<span class=\"string\">&#x27;addN&#x27;</span>,num)</span><br><span class=\"line\">           &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>触发 actions 方式一</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods:&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">handle3</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.$store.dispatch(<span class=\"string\">&#x27;addAsync&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">handle4</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//触发actions中的方法</span></span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$store.dispatch(<span class=\"string\">&#x27;addNAsync&#x27;</span>,<span class=\"number\">8</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>触发 actions 方式二</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods:&#123;</span><br><span class=\"line\">\t...mapActions([<span class=\"string\">&#x27;addAsync&#x27;</span>,<span class=\"string\">&#x27;addNAsync&#x27;</span>])<span class=\"comment\">// 解构</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnHandle3</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.addAsync()<span class=\"comment\">//使用</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">btnHandle4</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.addNAsync(<span class=\"number\">5</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"getters\"><a class=\"markdownIt-Anchor\" href=\"#getters\">#</a> getters</h4>\n<blockquote>\n<p>用于对 state 进行加工处理形成新数据，不会修改 <code>state</code>  数据，只起到包装的作用</p>\n<p>类似 <code>computed</code> ， <code>store</code>  数据发生变化， <code>getters</code>  数据也会随着变化</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">  \t<span class=\"attr\">count</span>:<span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    <span class=\"attr\">getters</span>:&#123;</span><br><span class=\"line\">    \t<span class=\"attr\">showCount</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#x27;当前最新数量&#x27; + state.count&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>getters 使用方式一</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.$store.getters.showCount</span><br></pre></td></tr></table></figure>\n<p><strong>getters 使用方式二</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed:&#123;</span><br><span class=\"line\">    ...mapGetters([<span class=\"string\">&#x27;showCount&#x27;</span>])</span><br><span class=\"line\">&#125;<span class=\"comment\">//使用：&#123;&#123;showCount&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"modules\"><a class=\"markdownIt-Anchor\" href=\"#modules\">#</a> modules</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> moduleA = &#123;</span><br><span class=\"line\"> <span class=\"attr\">state</span>: &#123; ... &#125;,</span><br><span class=\"line\"> <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\"> <span class=\"attr\">actions</span>: &#123; ... &#125;,</span><br><span class=\"line\"> <span class=\"attr\">getters</span>: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> moduleB = &#123;</span><br><span class=\"line\"> <span class=\"attr\">state</span>: &#123; ... &#125;,</span><br><span class=\"line\"> <span class=\"attr\">mutations</span>: &#123; ... &#125;,</span><br><span class=\"line\"> <span class=\"attr\">actions</span>: &#123; ... &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\"> <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: moduleA,</span><br><span class=\"line\">  <span class=\"attr\">b</span>: moduleB&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>块内部的数据：模块内部的 <code>state</code>  是局部的，也就是模块私有的</p>\n</blockquote>\n",
            "tags": [
                "Vue",
                "Vuex"
            ]
        },
        {
            "id": "https://codingfxj.github.io/2021/06/01/VueRouter/",
            "url": "https://codingfxj.github.io/2021/06/01/VueRouter/",
            "title": "VueRouter",
            "date_published": "2021-05-31T16:14:43.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h2 id=\"vuerouter\"><a class=\"markdownIt-Anchor\" href=\"#vuerouter\">#</a> VueRouter</h2>\n<h3 id=\"路由\"><a class=\"markdownIt-Anchor\" href=\"#路由\">#</a> 路由</h3>\n<h4 id=\"路由简介\"><a class=\"markdownIt-Anchor\" href=\"#路由简介\">#</a> 路由简介</h4>\n<p><strong>路由</strong>（<strong>routing</strong>）就是通过互联的网络把信息从源地址传输到目的地址的活动</p>\n<blockquote>\n<p>路由器提供了两种机制: <strong>路由和转送.</strong></p>\n<p>路由是决定数据包从<strong>来源</strong>到<strong>目的地</strong>的路径.</p>\n<p>转送将<strong>输入端</strong>的数据转移到合适的<strong>输出端</strong>.</p>\n</blockquote>\n<p>路由中有一个映射表，决定了数据包的指向</p>\n<h4 id=\"路由发展阶段\"><a class=\"markdownIt-Anchor\" href=\"#路由发展阶段\">#</a> 路由发展阶段</h4>\n<p><strong>一，后端路由阶段</strong></p>\n<p>服务器直接生产渲染好对应的 HTML 页面，返回给客户端进行展示</p>\n<blockquote>\n<p><strong>缺点</strong>：</p>\n<p>整个页面的模块由后端人员来编写和维护的</p>\n<p>HTML 代码和数据以及对应的逻辑会混在一起，难以编写和维护</p>\n</blockquote>\n<p><strong>二，前后端分离阶段</strong></p>\n<p>后端只提供 API 来返回数据，前端通过 Ajax 获取数据，并且可以通过 JavaScript 将数据渲染到页面中.</p>\n<blockquote>\n<p><strong>优点：</strong></p>\n<p>前后端责任的清晰，后端专注于数据上，前端专注于交互和可视化上</p>\n</blockquote>\n<p><strong>三，单页面富应用阶段</strong></p>\n<p>在前后端分离的基础上加了一层前端路由</p>\n<blockquote>\n<p><strong>前端路由的核心</strong>： 改变 URL，但是页面不进行整体的刷新</p>\n</blockquote>\n<h4 id=\"页面跳转不刷新实现方式\"><a class=\"markdownIt-Anchor\" href=\"#页面跳转不刷新实现方式\">#</a> 页面跳转不刷新实现方式</h4>\n<p><strong>URL 的 hash 方式</strong></p>\n<p>本质上是改变 <code>window.location</code>  的 href 属性，直接赋值 <code>location.hash</code>  来改变 href, 页面不发生刷新</p>\n<p><strong>HTML5 的 history 模式</strong></p>\n<p>五种模式改变 URL 而不刷新页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">history.pushState()</span><br><span class=\"line\">history.replaceState()</span><br><span class=\"line\">history.go()</span><br><span class=\"line\">history.back() 等价于 history.go(-1)</span><br><span class=\"line\">history.forward() 则等价于 history.go(1)</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置与使用\"><a class=\"markdownIt-Anchor\" href=\"#配置与使用\">#</a> 配置与使用</h3>\n<h4 id=\"步骤一-安装vue-router\"><a class=\"markdownIt-Anchor\" href=\"#步骤一-安装vue-router\">#</a> <strong>步骤一</strong>：安装 vue-router</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-router --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤二-vue调用vue-router\"><a class=\"markdownIt-Anchor\" href=\"#步骤二-vue调用vue-router\">#</a> <strong>步骤二</strong>: Vue 调用 vue-router</h4>\n<blockquote>\n<p><strong>第一步</strong>：导入路由对象，并调用</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>第二步</strong>：创建路由实例，并且传入路由映射配置，导出路由实例</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [<span class=\"comment\">//路由映射配置</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>:<span class=\"string\">&quot;/home&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: Home</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&quot;/about&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">component</span>: About</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\">//创建路由实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> router =  <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    routes</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//导出路由实例</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>第三步</strong>：在 Vue 实例中挂载创建的路由实例</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  router,  <span class=\"comment\">// 注入到根实例中</span></span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤三-使用vue-router的步骤\"><a class=\"markdownIt-Anchor\" href=\"#步骤三-使用vue-router的步骤\">#</a> <strong>步骤三</strong>：使用 vue-router 的步骤:</h4>\n<p><strong>第一步</strong>：创建路由组件<br>\n<strong>第二步</strong>：配置路由映射：组件和路径映射关系<br>\n<strong>第三步</strong>：使用路由：通过 <code>&lt;router-link&gt;</code>  和 <code>&lt;router-view&gt;</code>  展示</p>\n<h4 id=\"router-link补充\"><a class=\"markdownIt-Anchor\" href=\"#router-link补充\">#</a> router-link 补充</h4>\n<p>tag:  <code>tag</code>  属性可以指定 <code>&lt;router-link&gt;</code>  之后渲染成什么组件</p>\n<p>replace:  <code>replace</code>  不会留下 history 记录，前进后退不可用</p>\n<p><code>active-class</code>  当 <code>&lt;router-link&gt;</code>  对应的路由匹配成功时，</p>\n<p>会自动给当前元素设置一个 <code>router-link-active</code>  的 class, 设置 <code>active-class</code>  可以修改默认的名称.</p>\n<p><strong>声明式</strong>\t <code>&lt;router-link :to=&quot;...&quot;&gt;</code></p>\n<p><strong>编程式</strong>\t <code>router.push(...)</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符串</span></span><br><span class=\"line\">router.push(<span class=\"string\">&#x27;home&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;home&#x27;</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 命名的路由</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user&#x27;</span>, <span class=\"attr\">params</span>: &#123; <span class=\"attr\">userId</span>: <span class=\"string\">&#x27;123&#x27;</span> &#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 带查询参数，变成 /register?plan=private</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;register&#x27;</span>, <span class=\"attr\">query</span>: &#123; <span class=\"attr\">plan</span>: <span class=\"string\">&#x27;private&#x27;</span> &#125;&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> userId = <span class=\"string\">&#x27;123&#x27;</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user&#x27;</span>, <span class=\"attr\">params</span>: &#123; userId &#125;&#125;) <span class=\"comment\">// -&gt; /user/123</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">`/user/<span class=\"subst\">$&#123;userId&#125;</span>`</span> &#125;) <span class=\"comment\">// -&gt; /user/123</span></span><br><span class=\"line\"><span class=\"comment\">// path与params不可同时使用，这里的 params 不生效</span></span><br><span class=\"line\">router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/user&#x27;</span>, <span class=\"attr\">params</span>: &#123; userId &#125;&#125;) <span class=\"comment\">// -&gt; /user</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由重定向\"><a class=\"markdownIt-Anchor\" href=\"#路由重定向\">#</a> 路由重定向</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"attr\">redirect</span>: <span class=\"string\">&#x27;/home&#x27;</span> &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"导航守卫\"><a class=\"markdownIt-Anchor\" href=\"#导航守卫\">#</a> 导航守卫</h3>\n<p>导航守卫又称路由守卫，实时监控路由跳转时的过程，在路由跳转的各个过程执行相应的操作，类似于生命周期函数</p>\n<p><strong>全局路由一共分为三类：全局守卫，路由独享的守卫，组件内的守卫</strong></p>\n<h4 id=\"一-全局守卫\"><a class=\"markdownIt-Anchor\" href=\"#一-全局守卫\">#</a> 一、全局守卫</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局守卫有三种：</span><br><span class=\"line\">    1.router.beforeEach（全局前置守卫）</span><br><span class=\"line\">    2.router.beforeResolve（全局解析守卫）</span><br><span class=\"line\">    3.router.afterEach（全局后置守卫）</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ol>\n<li>router.beforeEach（全局前置守卫）</li>\n</ol>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const router = new VueRouter(&#123; ... &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>to: Route</strong>: 即将要进入的目标 <a href=\"https://router.vuejs.org/zh/api/#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1\">路由对象</a></p>\n<p><strong>from: Route</strong>: 当前导航正要离开的路由</p>\n<p><strong>next</strong>: 执行跳转下一步的钩子函数</p>\n</blockquote>\n<blockquote>\n<p>2 .router.beforeResolve (全局解析守卫)</p>\n</blockquote>\n<p>和全局前置守卫类似，区别是在跳转被确认之前，同时在所有组件内守卫和异步路由组件都被解析之后，解析守卫才调用。</p>\n<blockquote>\n<p>3.router.afterEach (全局后置钩子)</p>\n</blockquote>\n<p>只接受 to 和 from, 不会接受 next 函数也不会改变导航本身</p>\n<p><strong>案例（新增跳转加载进度条）</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 进度条组件及样式</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> NProgress <span class=\"keyword\">from</span> <span class=\"string\">&#x27;nprogress&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;nprogress/nprogress.css&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    NProgress.start()</span><br><span class=\"line\">    next()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.afterEach(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        NProgress.done()</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"二-路由独享守卫\"><a class=\"markdownIt-Anchor\" href=\"#二-路由独享守卫\">#</a> 二、路由独享守卫</h4>\n<blockquote>\n<p>独享守卫只有一种:beforeEnter。<br>\n该守卫接收的参数与全局守卫是一样的，但是该守卫只在其他路由跳转至配置有 beforeEnter 路由表信息时才生效。<br>\nrouter 配置文件内容：</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   path: &#x27;/about&#x27;,</span><br><span class=\"line\">   name: &#x27;about&#x27;,</span><br><span class=\"line\">   component: about,</span><br><span class=\"line\">   beforeEnter:(to,from,next)=&gt;&#123;</span><br><span class=\"line\">      console.log(to);</span><br><span class=\"line\">      console.log(from);</span><br><span class=\"line\">      next()</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"三-组件内守卫\"><a class=\"markdownIt-Anchor\" href=\"#三-组件内守卫\">#</a> 三、组件内守卫</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组件内守卫一共有三个：</span><br><span class=\"line\">    beforeRouteEnter，</span><br><span class=\"line\">    beforeRouteUpdate，</span><br><span class=\"line\">    beforeRouteLeave</span><br><span class=\"line\">三者分别对应：进入该路由时执行，该路由中参数改变时执行，离开该路由时执行。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;关于页面&lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name: &quot;about&quot;,</span><br><span class=\"line\">    beforeRouteEnter(to, from, next) &#123;</span><br><span class=\"line\">      //进入该路由时执行</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    beforeRouteUpdate(to, from, next) &#123;</span><br><span class=\"line\">      //该路由参数更新时执行</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    beforeRouteLeave(to, from, next) &#123;</span><br><span class=\"line\">      //离开该路由时执行</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style scoped&gt;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Vue"
            ]
        }
    ]
}