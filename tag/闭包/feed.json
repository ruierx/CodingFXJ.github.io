{
    "version": "https://jsonfeed.org/version/1",
    "title": "CodingFXJ'Blog • All posts by \"闭包\" tag",
    "description": "",
    "home_page_url": "https://CodingFXJ.github.io",
    "items": [
        {
            "id": "https://codingfxj.github.io/2021/07/04/JS%E9%97%AD%E5%8C%85/",
            "url": "https://codingfxj.github.io/2021/07/04/JS%E9%97%AD%E5%8C%85/",
            "title": "JS闭包",
            "date_published": "2021-07-04T01:03:40.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\css\\APlayer.min.css\"><script src=\"\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\js\\Meting.min.js\"></script><h3 id=\"闭包理解\"><a class=\"markdownIt-Anchor\" href=\"#闭包理解\">#</a> 闭包理解</h3>\n<p>变量根据作用域的不同分为两种：全局变量和局部变量</p>\n<blockquote>\n<ol>\n<li>\n<p>函数内部可以使用全局变量。</p>\n</li>\n<li>\n<p>函数外部不可以使用局部变量。</p>\n</li>\n<li>\n<p>当函数执行完毕，本作用域内的局部变量会销毁。</p>\n</li>\n</ol>\n</blockquote>\n<p><strong>全局作用域</strong><br>\n (1) 全局作用域在页面打开时被创建，页面关闭时被销毁<br>\n (2) 编写在 script 标签中的变量和函数，作用域为全局，在页面的任意位置都可以访问到<br>\n (3) 在全局作用域中有全局对象 window, 代表一个浏览器窗口，由浏览器创建，可以直接调用<br>\n (4) 全局作用域中声明的变量和函数会作为 window 对象的属性和方法保存</p>\n<p><strong>函数作用域</strong><br>\n (1) 调用函数时，函数作用域被创建，函数执行完毕，函数作用域被销毁<br>\n (2) 每调用一次函数就会创建一个新的函数作用域，他们之间是相互独立的<br>\n (3) 在函数作用域中可以访问到全局作用域的变量，在函数外无法访问到函数作用域内的变量<br>\n (4) 在函数作用域中访问变量、函数时，会先在自身作用域中寻找，若没有找到，则会到函数的上一级作用域中寻找，一直到全局作用域</p>\n<p><strong>闭包 (closure) 理解：一个作用域可以访问另外一个函数内部的局部变量</strong></p>\n<blockquote>\n<p>主要实现思路：函数内部返回函数</p>\n<p>主要作用：延伸了变量的作用范围（生命周期）</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//产生闭包</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(num)<span class=\"comment\">//10</span></span><br><span class=\"line\">        <span class=\"comment\">//由于fn是闭包函数，所以num这个变量不会在调用了fn()后立即销毁，</span></span><br><span class=\"line\">        <span class=\"comment\">//因为还有别的函数会使用这个变量。只有等所以函数都调用完后才会销毁这个变量。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>定时器中的闭包</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//闭包应用-3秒钟之后,打印所有li元素的内容</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lis = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;.nav&#x27;</span>).querySelectorAll(<span class=\"string\">&#x27;li&#x27;</span>); </span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class=\"line\">        (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(lis[i].innerHTML);</span><br><span class=\"line\">            &#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\">        &#125;)(i);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"闭包应用\"><a class=\"markdownIt-Anchor\" href=\"#闭包应用\">#</a> 闭包应用</h3>\n<p><strong>单例模式</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> singleTon = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Person.prototype.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Hello&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//产生闭包，instance会被缓存</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> instance = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">//全局变量接收的</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">singleTon</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!instance) instance = <span class=\"keyword\">new</span> Person()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p><strong>防抖函数</strong></p>\n<p>用于避免用户输入框频繁自动发送 <code>ajax</code>  请求</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> input = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;input&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">//防抖函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">func, time</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) </span>&#123;</span><br><span class=\"line\">        timer &amp;&amp; <span class=\"built_in\">clearTimeout</span>(timer)</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            timer = <span class=\"number\">0</span></span><br><span class=\"line\">            func.apply(<span class=\"built_in\">this</span>, args)</span><br><span class=\"line\">        &#125;, time)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">input.addEventListener(<span class=\"string\">&#x27;keyup&#x27;</span>,</span><br><span class=\"line\">        debounce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;<span class=\"comment\">// 事件处理逻辑</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(e.target.value) </span><br><span class=\"line\">        &#125;, <span class=\"number\">500</span>)</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n<p><strong>节流</strong></p>\n<p>解决轮播图按钮多次连续点击问题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不运用闭包</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">openLock</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    lock = <span class=\"literal\">true</span>;<span class=\"comment\">//开锁</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">goNextBtn.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!lock) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    goNext();</span><br><span class=\"line\">    time = <span class=\"number\">0</span>;</span><br><span class=\"line\">    lock = <span class=\"literal\">false</span>;<span class=\"comment\">//点完按钮，关锁</span></span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(openLock, <span class=\"number\">800</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//应用闭包</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> button = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&#x27;button&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> clickButton = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> lock = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!lock) <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;11111&#x27;</span>);</span><br><span class=\"line\">        lock = <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                lock = <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\">button.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, clickButton)</span><br></pre></td></tr></table></figure>\n<p><strong>模拟私有方法或变量</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cMoney</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> money = <span class=\"number\">0</span> <span class=\"comment\">// 经验值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">getMoney</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> money</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">changeMoney</span>(<span class=\"params\">num</span>)</span> &#123;</span><br><span class=\"line\">            money += num</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = cMoney()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(p.getMoney()) <span class=\"comment\">// 0</span></span><br><span class=\"line\">p.changeMoney(<span class=\"number\">1000</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(p.getMoney()) <span class=\"comment\">// 1000</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"闭包弊端\"><a class=\"markdownIt-Anchor\" href=\"#闭包弊端\">#</a> 闭包弊端</h3>\n<blockquote>\n<p>常驻内存 会增，大内存的使用量， 使用不当会造成内存泄露。解决办法：函数调用完手动回收变量。</p>\n</blockquote>\n",
            "tags": [
                "JS",
                "闭包"
            ]
        }
    ]
}